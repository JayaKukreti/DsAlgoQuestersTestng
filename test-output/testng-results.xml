<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="10" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-30T15:53:13 CST" name="Default suite" finished-at="2025-01-30T15:54:24 CST" duration-ms="71472">
    <groups>
    </groups>
    <test started-at="2025-01-30T15:53:13 CST" name="Default test" finished-at="2025-01-30T15:54:24 CST" duration-ms="71472">
      <class name="dsAlgoTests.GraphTest">
        <test-method is-config="true" signature="setupSuite()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:13 CST" name="setupSuite" finished-at="2025-01-30T15:53:13 CST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuite -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:13 CST" name="before" finished-at="2025-01-30T15:53:15 CST" duration-ms="2204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:15 CST" name="navigateGraphPage" finished-at="2025-01-30T15:53:17 CST" duration-ms="1928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="checkErrorMessageWhenExecutingWithoutCodeInGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:17 CST" name="checkErrorMessageWhenExecutingWithoutCodeInGraphPage" finished-at="2025-01-30T15:53:18 CST" duration-ms="1326" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Test failed: Expected an error message when clicking the 'Run' button without entering code, but no message was displayed.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Test failed: Expected an error message when clicking the 'Run' button without entering code, but no message was displayed.
at org.testng.Assert.fail(Assert.java:99)
at dsAlgoTests.GraphTest.checkErrorMessageWhenExecutingWithoutCodeInGraphPage(GraphTest.java:121)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorMessageWhenExecutingWithoutCodeInGraphPage -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:18 CST" name="tearDownTest" finished-at="2025-01-30T15:53:19 CST" duration-ms="360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkErrorMessageWhenExecutingWithoutCodeInGraphPage status=FAILURE method=GraphTest.checkErrorMessageWhenExecutingWithoutCodeInGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:19 CST" name="before" finished-at="2025-01-30T15:53:20 CST" duration-ms="1538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:20 CST" name="navigateGraphPage" finished-at="2025-01-30T15:53:22 CST" duration-ms="1739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="checkErrorMessageWhenExecutingWithoutCodeInGraphReprePage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:22 CST" name="checkErrorMessageWhenExecutingWithoutCodeInGraphReprePage" finished-at="2025-01-30T15:53:23 CST" duration-ms="1331" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Test failed: Expected an error message when clicking the 'Run' button without entering code, but no message was displayed.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Test failed: Expected an error message when clicking the 'Run' button without entering code, but no message was displayed.
at org.testng.Assert.fail(Assert.java:99)
at dsAlgoTests.GraphTest.checkErrorMessageWhenExecutingWithoutCodeInGraphReprePage(GraphTest.java:131)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorMessageWhenExecutingWithoutCodeInGraphReprePage -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:23 CST" name="tearDownTest" finished-at="2025-01-30T15:53:24 CST" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkErrorMessageWhenExecutingWithoutCodeInGraphReprePage status=FAILURE method=GraphTest.checkErrorMessageWhenExecutingWithoutCodeInGraphReprePage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:24 CST" name="before" finished-at="2025-01-30T15:53:26 CST" duration-ms="1510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:26 CST" name="navigateGraphPage" finished-at="2025-01-30T15:53:28 CST" duration-ms="2217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="navigateToGraphModuleTryEditor(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:28 CST" name="navigateToGraphModuleTryEditor" data-provider="testdata" finished-at="2025-01-30T15:53:29 CST" duration-ms="1137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://dsportalapp.herokuapp.com/tryEditor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToGraphModuleTryEditor -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:29 CST" name="tearDownTest" finished-at="2025-01-30T15:53:30 CST" duration-ms="229" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToGraphModuleTryEditor status=SUCCESS method=GraphTest.navigateToGraphModuleTryEditor(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:30 CST" name="before" finished-at="2025-01-30T15:53:31 CST" duration-ms="1718" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:31 CST" name="navigateGraphPage" finished-at="2025-01-30T15:53:33 CST" duration-ms="2011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="navigateToGraphOption(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:33 CST" name="navigateToGraphOption" data-provider="testdata" finished-at="2025-01-30T15:53:34 CST" duration-ms="387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://dsportalapp.herokuapp.com/graph/graph/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToGraphOption -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:34 CST" name="tearDownTest" finished-at="2025-01-30T15:53:34 CST" duration-ms="171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToGraphOption status=SUCCESS method=GraphTest.navigateToGraphOption(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:34 CST" name="before" finished-at="2025-01-30T15:53:35 CST" duration-ms="1476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:35 CST" name="navigateGraphPage" finished-at="2025-01-30T15:53:37 CST" duration-ms="1947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="navigateToGraphPracticeQuestions(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:37 CST" name="navigateToGraphPracticeQuestions" data-provider="testdata" finished-at="2025-01-30T15:53:38 CST" duration-ms="859" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://dsportalapp.herokuapp.com/graph/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToGraphPracticeQuestions -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:38 CST" name="tearDownTest" finished-at="2025-01-30T15:53:38 CST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToGraphPracticeQuestions status=SUCCESS method=GraphTest.navigateToGraphPracticeQuestions(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:39 CST" name="before" finished-at="2025-01-30T15:53:40 CST" duration-ms="1584" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:40 CST" name="navigateGraphPage" finished-at="2025-01-30T15:53:42 CST" duration-ms="1970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="navigateToGraphRepresentationPracticeQuestions(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:42 CST" name="navigateToGraphRepresentationPracticeQuestions" data-provider="testdata" finished-at="2025-01-30T15:53:43 CST" duration-ms="982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://dsportalapp.herokuapp.com/graph/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToGraphRepresentationPracticeQuestions -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:43 CST" name="tearDownTest" finished-at="2025-01-30T15:53:43 CST" duration-ms="201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToGraphRepresentationPracticeQuestions status=SUCCESS method=GraphTest.navigateToGraphRepresentationPracticeQuestions(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:43 CST" name="before" finished-at="2025-01-30T15:53:45 CST" duration-ms="1514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:45 CST" name="navigateGraphPage" finished-at="2025-01-30T15:53:47 CST" duration-ms="2253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="navigateToGraphRepresentationTryEditor(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:47 CST" name="navigateToGraphRepresentationTryEditor" data-provider="testdata" finished-at="2025-01-30T15:53:48 CST" duration-ms="1378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://dsportalapp.herokuapp.com/tryEditor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToGraphRepresentationTryEditor -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:48 CST" name="tearDownTest" finished-at="2025-01-30T15:53:49 CST" duration-ms="207" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToGraphRepresentationTryEditor status=SUCCESS method=GraphTest.navigateToGraphRepresentationTryEditor(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:49 CST" name="before" finished-at="2025-01-30T15:53:50 CST" duration-ms="1451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:50 CST" name="navigateGraphPage" finished-at="2025-01-30T15:53:52 CST" duration-ms="2212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="navigatetoGraphRepresentation(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:52 CST" name="navigatetoGraphRepresentation" data-provider="testdata" finished-at="2025-01-30T15:53:53 CST" duration-ms="534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://dsportalapp.herokuapp.com/graph/graph-representations/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigatetoGraphRepresentation -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:53 CST" name="tearDownTest" finished-at="2025-01-30T15:53:53 CST" duration-ms="189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigatetoGraphRepresentation status=SUCCESS method=GraphTest.navigatetoGraphRepresentation(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:53 CST" name="before" finished-at="2025-01-30T15:53:55 CST" duration-ms="1528" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:55 CST" name="navigateGraphPage" finished-at="2025-01-30T15:53:57 CST" duration-ms="2057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="seeListOfPracticeQuestionsonGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:57 CST" name="seeListOfPracticeQuestionsonGraphPage" finished-at="2025-01-30T15:53:57 CST" duration-ms="735" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[No practice questions found on the Practice Questions Page!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: No practice questions found on the Practice Questions Page!
at org.testng.Assert.fail(Assert.java:99)
at dsAlgoTests.GraphTest.seeListOfPracticeQuestionsonGraphPage(GraphTest.java:104)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeListOfPracticeQuestionsonGraphPage -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:57 CST" name="tearDownTest" finished-at="2025-01-30T15:53:58 CST" duration-ms="322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=seeListOfPracticeQuestionsonGraphPage status=FAILURE method=GraphTest.seeListOfPracticeQuestionsonGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:58 CST" name="before" finished-at="2025-01-30T15:53:59 CST" duration-ms="1548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:53:59 CST" name="navigateGraphPage" finished-at="2025-01-30T15:54:01 CST" duration-ms="1877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="seeListOfPracticeQuestionsonGraphReprePage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:01 CST" name="seeListOfPracticeQuestionsonGraphReprePage" finished-at="2025-01-30T15:54:02 CST" duration-ms="689" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[No practice questions found on the Practice Questions Page!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: No practice questions found on the Practice Questions Page!
at org.testng.Assert.fail(Assert.java:99)
at dsAlgoTests.GraphTest.seeListOfPracticeQuestionsonGraphReprePage(GraphTest.java:112)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeListOfPracticeQuestionsonGraphReprePage -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:02 CST" name="tearDownTest" finished-at="2025-01-30T15:54:02 CST" duration-ms="362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=seeListOfPracticeQuestionsonGraphReprePage status=FAILURE method=GraphTest.seeListOfPracticeQuestionsonGraphReprePage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:02 CST" name="before" finished-at="2025-01-30T15:54:04 CST" duration-ms="1749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:04 CST" name="navigateGraphPage" finished-at="2025-01-30T15:54:06 CST" duration-ms="1851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="verifyInValidCodeExecutionforGraphPage(java.lang.String,java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:06 CST" name="verifyInValidCodeExecutionforGraphPage" data-provider="tryeditordata" finished-at="2025-01-30T15:54:07 CST" duration-ms="1464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NameError: name 'invalid' is not defined on line 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInValidCodeExecutionforGraphPage -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:07 CST" name="tearDownTest" finished-at="2025-01-30T15:54:08 CST" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInValidCodeExecutionforGraphPage status=SUCCESS method=GraphTest.verifyInValidCodeExecutionforGraphPage(java.lang.String,java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:08 CST" name="before" finished-at="2025-01-30T15:54:09 CST" duration-ms="1596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:09 CST" name="navigateGraphPage" finished-at="2025-01-30T15:54:11 CST" duration-ms="1946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="verifyInValidCodeExecutionforGraphRepresentationPage(java.lang.String,java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:11 CST" name="verifyInValidCodeExecutionforGraphRepresentationPage" data-provider="tryeditordata" finished-at="2025-01-30T15:54:13 CST" duration-ms="1577" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NameError: name 'invalid' is not defined on line 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInValidCodeExecutionforGraphRepresentationPage -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:13 CST" name="tearDownTest" finished-at="2025-01-30T15:54:13 CST" duration-ms="232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInValidCodeExecutionforGraphRepresentationPage status=SUCCESS method=GraphTest.verifyInValidCodeExecutionforGraphRepresentationPage(java.lang.String,java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:13 CST" name="before" finished-at="2025-01-30T15:54:15 CST" duration-ms="1712" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:15 CST" name="navigateGraphPage" finished-at="2025-01-30T15:54:17 CST" duration-ms="2015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="verifyValidCodeExecutionforGraphPage(java.lang.String,java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:17 CST" name="verifyValidCodeExecutionforGraphPage" data-provider="tryeditordata" finished-at="2025-01-30T15:54:19 CST" duration-ms="1680" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print "hello"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidCodeExecutionforGraphPage -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:19 CST" name="tearDownTest" finished-at="2025-01-30T15:54:19 CST" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidCodeExecutionforGraphPage status=SUCCESS method=GraphTest.verifyValidCodeExecutionforGraphPage(java.lang.String,java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="before(java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:19 CST" name="before" finished-at="2025-01-30T15:54:20 CST" duration-ms="1618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="navigateGraphPage()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:20 CST" name="navigateGraphPage" finished-at="2025-01-30T15:54:22 CST" duration-ms="1787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateGraphPage -->
        <test-method signature="verifyValidCodeExecutionforGraphRepresentationPage(java.lang.String,java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:22 CST" name="verifyValidCodeExecutionforGraphRepresentationPage" data-provider="tryeditordata" finished-at="2025-01-30T15:54:24 CST" duration-ms="1705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print "hello"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidCodeExecutionforGraphRepresentationPage -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:24 CST" name="tearDownTest" finished-at="2025-01-30T15:54:24 CST" duration-ms="208" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidCodeExecutionforGraphRepresentationPage status=SUCCESS method=GraphTest.verifyValidCodeExecutionforGraphRepresentationPage(java.lang.String,java.lang.String)[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="tearDownSuite()[pri:0, instance:dsAlgoTests.GraphTest@7d3e8655]" started-at="2025-01-30T15:54:24 CST" name="tearDownSuite" finished-at="2025-01-30T15:54:24 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownSuite -->
      </class> <!-- dsAlgoTests.GraphTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
